{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProjects.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","react_router_dom","to","onClick","profile","initials","SingedOutLinks","state","console","log","firebase","links","uid","SignedInLinks","SignedOutLinks","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","_ref","project","title","authorFirstName","authorLastName","createdAt","toString","calendar","ProjectList","projects","projects_ProjectSummary","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","react_router","Component","compose","firestore","ordered","notification","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","lastName","firtsName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","cols","rows","authorId","add","objectSpread","firstName","Date","App","layout_Navbar","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92434357.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SingedInLinks = (props) => {\n    return (\n       <ul className=\"right\">\n        <li><NavLink to='/create'>New Project</NavLink></li>\n        <li><a onClick={ props.signOut }>Log Out</a></li>\n        <li><NavLink to='/' className='btn btn.floating pink lighten-1'>\n            {props.profile.initials ? props.profile.initials: \"NN\"}\n        </NavLink></li>\n       </ul>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signOut: () => dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)( SingedInLinks )","export const  signIn = (credentials) => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS'})\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err })\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, { getFirebase }) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' });\n        });\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, { getFirebase, getFirestore }) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password,\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firtsName: newUser.firtsName,\n                lastName: newUser.lastName,\n                initials: newUser.firtsName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({type: 'SIGNUP_SUCCESS'})\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err})\n        })\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst SingedOutLinks = () => {\n    return (\n       <ul className=\"right\">\n        <li><NavLink to='/signup'>Signup</NavLink></li>\n        <li><NavLink to='/signin'>Login</NavLink></li>\n       </ul>\n    )\n}\n\nexport default SingedOutLinks","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignedInLinks from './SignedInLinks';\nimport SignedOutLinks from './SignedOutLinks';\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n    const { auth, profile } = props;\n    const links = auth.uid ? <SignedInLinks profile={profile} /> :  <SignedOutLinks />;\n    return (\n        <nav className='nav-wrapper grey darken-3'>\n            <div className=\"container\">\n                <Link to='/' className=\"brand-logo\">My Blog</Link>\n                { links }\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps = (state) => {\n    console.log(state);\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)( Navbar )","import React from 'react';\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n    const { notifications } = props;\n    return (\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        { notifications && notifications.map(item => {\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\">{item.user}</span>\n                                    <span> {item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n            <div className=\"card-content grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by { project.authorFirstName } { project.authorLastName }</p>\n                <p className=\"grey-text\">{ moment(project.createdAt.toDate().toString()).calendar() }</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n    return (\n        <div className=\"project-list section\">\n            {projects && projects.map(project => {\n                return (\n                    <Link to={'/project/' + project.id} key={project.id} >\n                        <ProjectSummary project={project} />\n                    </Link>\n                )\n            })}\n        </div>\n    )\n}\n\nexport default ProjectList","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n    render() {\n        const { projects, auth, notifications } = this.props;\n        console.log(notifications);\n        if(!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s12 m6\">\n                        <ProjectList projects={projects} />\n                    </div>\n                    <div className=\"col s12 m5 offset-m1\">\n                        <Notifications notifications={notifications} />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notification\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects', orderBy: ['createdAt', 'desc'] },\n        { collection: 'notification', limit: 3, orderBy: ['time', 'desc'] }\n    ])\n)( Dashboard )","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n  const { project, auth } = props;\n  if(!auth.uid) return <Redirect to=\"/signin\" />\n  if(project) {\n    return (\n      <div className=\"container section project-details\">\n          <div className=\"card z-depth-0\">\n              <div className=\"card-content\">\n                  <span className=\"card-title\">{ project.title }</span>\n                  <p>{ project.content }</p>\n              </div>\n              <div className=\"card-action gret lighten-4 grey-text\">\n                  <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\n                  <div>{ moment(project.createdAt.toDate().toString()).calendar() }</div>\n              </div>\n          </div>\n      </div>\n    )\n  }else {\n    return (\n      <div className=\"container center\">\n        <p>Loading project ...</p>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(state);\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects; \n  const project = projects ? projects[id] : null;\n  return {\n    project: project,\n    auth: state.firebase.auth\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects' }\n  ])\n)( ProjectDetails )\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n    state = {\n        email: '',\n        password: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state)\n    }\n    render() {\n      const { authError, auth } = this.props;\n      if(auth.uid) return <Redirect to='/'/>\n      return (\n        <div className=\"container\">\n            <form onSubmit={this.handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                    <div className=\"red-text center\">\n                        { authError ? <p>{ authError }</p> : null }\n                    </div>\n                </div>\n            </form>\n        </div>\n      )\n  }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect( mapStateToProps, mapDispatchToProps )(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        email: '',\n        password: '',\n        lastName: '',\n        firtsName: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n    render() {\n      const { auth, authError } = this.props;\n      if( auth.uid ) return <Redirect to=\"/\" />\n      return (\n        <div className=\"container\">\n            <form onSubmit={this.handleSubmit} className=\"white\">\n                <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                <div className=\"input-field\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"firtsName\">Firts Name</label>\n                    <input type=\"text\" id=\"firtsName\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"lastName\">Last Name</label>\n                    <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <label htmlFor=\"password\">Password</label>\n                    <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                </div>\n                <div className=\"input-field\">\n                    <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                    <div className=\"red-text center\">\n                        { authError ? <p>{ authError }</p>: null }\n                    </div>\n                </div>\n            </form>\n        </div>\n      )\n  }\n}\n\nconst mapStateToProps = (state)  => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state = {\n        title: '',\n        content: ''\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n    render() {\n        const { auth } = this.props;\n        if(!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create new project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Project Content</label>\n                        <textarea id=\"content\" cols=\"30\" rows=\"10\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n    return (dispatch, getState, { getFirestore, getFirebase }) => {\n        //make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: 'CREATE_PROJECT', project })\n        }).catch((err) => {\n            dispatch({ type: 'CREATE_PROJECT_ERROR', err});\n        })\n    }\n};","import React, { Component } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProjects'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar/>\n          <Switch>\n            <Route exact path='/' component={Dashboard}></Route>\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return {\n                ...state,\n                authError: 'Login failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS': \n            console.log('signout success');\n            return state\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer","const initState = {\n    projects: [\n        {id: 1, title: 'Title One', content: 'Blah Blah Blah BlahBlah Blah'},\n        {id: 2, title: 'Title Two', content: 'Blah Blah Blah BlahBlah Blah'},\n        {id: 3, title: 'Title Three', content: 'Blah Blah Blah BlahBlah Blah'},\n        {id: 4, title: 'Title Four', content: 'Blah Blah Blah BlahBlah Blah'}\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer","  import firebase from 'firebase/app'\n  import 'firebase/firestore'\n  import 'firebase/auth'\n  \n  // Initialize Firebase\n  var config = {\n    apiKey: \"AIzaSyAYlrSjA5_dC8-iFZc1Qh0bYSDewDXeY9w\",\n    authDomain: \"react-firebase-344ca.firebaseapp.com\",\n    databaseURL: \"https://react-firebase-344ca.firebaseio.com\",\n    projectId: \"react-firebase-344ca\",\n    storageBucket: \"\",\n    messagingSenderId: \"900171567018\"\n  };\n  \n  firebase.initializeApp(config);\n  firebase.firestore();\n\n  export default firebase;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore'\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase'\nimport fbConfig from './config/fbConfig'\n\n\nconst store = createStore(rootReducer, \n    compose(\n        applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n        reduxFirestore(fbConfig),\n        reactReduxFirebase(fbConfig, { useFirestoreForProfile: true, userProfile: 'users',  attachAuthIsReady: true })\n    )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    \n    // If you want your app to work offline and load faster, you can change\n    // unregister() to register() below. Note this comes with some pitfalls.\n    // Learn more about service workers: https://bit.ly/CRA-PWA\n    serviceWorker.unregister();\n})\n\n"],"sourceRoot":""}